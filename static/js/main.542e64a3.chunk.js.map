{"version":3,"sources":["assets/logo.svg","assets/sign-in-background.png","assets/sign-up-background.png","styles/global.ts","services/api.ts","hooks/useAuth.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/useToast.tsx","hooks/index.tsx","routes/Route.tsx","utils/getValidationErrors.ts","pages/SignIn/styles.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","Provider","value","useAuth","context","useContext","Error","toastTypeVariations","info","css","success","error","Container","styled","animated","div","props","type","hasDescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","key","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","enter","leave","map","item","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","oldMessages","state","filter","AppProvider","Route","isPrivate","Component","component","rest","render","location","to","pathname","getValidationErrors","err","validationErrors","inner","forEach","path","console","log","Content","appearFromLeft","keyframes","AnimationContainer","shade","Background","signInBackgroundImg","Tooltip","className","hasError","isFocused","isFilled","Input","name","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","ref","onFocus","onBlur","color","button","Button","SignIn","formRef","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","errors","src","logoImg","alt","onSubmit","initialData","FiMail","placeholder","FiLock","href","SignUp","history","useHistory","min","push","FiUser","Dashboard","Routes","exact","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.542e64a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a49b07ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    background: #213E38;\n    color: #FFF;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button, textarea {\n    font-family: 'Roboto Slab', serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6 strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nexport const AuthContext = createContext<AuthContextData>(\n  {} as AuthContextData,\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', { email, password });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\ninterface ContainerProps {\n  type?: 'success' | 'error' | 'info';\n  hasDescription: boolean;\n}\n\nconst toastTypeVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ContainerProps>`\n  width: 360px;\n\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  display: flex;\n\n  background: #ebf8ff;\n  color: #3172b7;\n\n  ${props => toastTypeVariations[props.type || 'info']}\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${props =>\n    !props.hasDescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0px;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { ToastMessage, useToast } from '../../../hooks/useToast';\n\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [message.id, removeToast]);\n\n  return (\n    <Container\n      key={message.id}\n      type={message.type}\n      hasDescription={!!message.description}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button type=\"button\" onClick={() => removeToast(message.id)}>\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { ToastMessage } from '../../hooks/useToast';\n\nimport Toast from './Toast';\n\nimport { Container } from './styles';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    message => message.id,\n    {\n      from: { right: '-120%' },\n      enter: { right: '0%' },\n      leave: { right: '-120%' },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} style={props} message={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useContext, useCallback, useState } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<Array<ToastMessage>>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages(oldMessages => [...oldMessages, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages(state => state.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import React from 'react';\n\nimport { AuthProvider } from './useAuth';\nimport { ToastProvider } from './useToast';\n\nconst AppProvider: React.FC = ({ children }) => {\n  return (\n    <AuthProvider>\n      <ToastProvider>{children}</ToastProvider>\n    </AuthProvider>\n  );\n};\n\nexport default AppProvider;\n","import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/useAuth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  console.log(validationErrors);\n  return validationErrors;\n}\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport signInBackgroundImg from '../../assets/sign-in-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0px);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n\n      svg {\n        margin-right: 8px;\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 8px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ title, className, children }) => {\n  return (\n    <Container className={className}>\n      <span>{title}</span>\n      {children}\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\n\nimport Tooltip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  hasError: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  border: 2px solid #232129;\n  padding: 16px;\n  width: 100%;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${props =>\n    props.hasError &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${props =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${props =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n  input {\n    background: transparent;\n    flex: 1;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    if (inputRef.current && inputRef.current.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container hasError={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #322e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#ff9000')};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","import React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { useAuth } from '../../hooks/useAuth';\nimport { useToast } from '../../hooks/useToast';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Container, Content, AnimationContainer, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        if (formRef.current) {\n          formRef.current.setErrors({});\n        }\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email('Enter with a valid e-mail')\n            .required('E-mail is required'),\n          password: Yup.string().required('Enter with your password'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(error);\n\n          if (formRef.current) {\n            formRef.current.setErrors(errors);\n          }\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Authentication error',\n            description: 'Login Failed. Check your credentials',\n          });\n        }\n      }\n    },\n    [signIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Gobarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit} initialData={{}}>\n            <h1>Enter with your login</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"Email\" />\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n\n            <Button type=\"submit\">Enter</Button>\n            <a href=\"forgot\">\n              <FiLogIn />\n              Forgot my password\n            </a>\n          </Form>\n\n          <Link to=\"/signup\">\n            <FiLogIn />\n            Create account\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport signInBackgroundImg from '../../assets/sign-up-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0px);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n\n      svg {\n        margin-right: 8px;\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 8px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { useToast } from '../../hooks/useToast';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, AnimationContainer, Background } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: object) => {\n      try {\n        if (formRef.current) {\n          formRef.current.setErrors({});\n        }\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .email('Digite e-mail válido')\n            .required('E-mail obrigatório'),\n          password: Yup.string().min(6, 'No mínimo 6 dígitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/users', data);\n\n        history.push('/');\n\n        addToast({\n          type: 'success',\n          title: 'Subscription acomplished',\n          description: 'Now you are ready to logon!',\n        });\n      } catch (error) {\n        const errors = getValidationErrors(error);\n\n        if (formRef.current) {\n          formRef.current.setErrors(errors);\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Subscription failed',\n          description: 'Something went wrong. Please try again!',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Gobarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit} initialData={{}}>\n            <h1>Create your account</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Name\" />\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"Email\" />\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n\n            <Button type=\"submit\">Subscribe</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Back to Login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst Dashboard: React.FC = () => {\n  return (\n    <Container>\n      <h1>Dashboard</h1>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\nimport Dashboard from '../pages/Dashboard';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/\" component={SignIn} />\n    <Route exact path=\"/signup\" component={SignUp} />\n\n    <Route exact path=\"/dashboard\" component={Dashboard} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\n\nimport AppProvider from './hooks';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <Router>\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}